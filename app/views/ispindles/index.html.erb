<div class="body-background" style="padding: 10px;">
<br>

<div class="row">

  <div class="col-md-6">
    <section class="profil-panel profils-widget">
    <br>
      <div style="display: flex; justify-content: space-between;">
        <%= image_tag @beer.photo, width: 150, height: 150 %>
        <h5><strong>Ispindle du Brassin : </strong><%= @beer.name %>
      <br><br>
        <strong>Collecte Data Ispindle </strong>&nbsp;&nbsp;
        <%= link_to parametrage_path(@brew, @ispindles) do %>
            <%= image_tag 'configuration.png',
            width: '40', height: '40' %>
        <% end %>
        </h5>
      </div>
    </section>
  </div>
</div>

<% @collect_temp = [] %>
<% @collect_dens = [] %>
<% @collect_date_temp = [] %>
<% @collect_date = [] %>
<% @test = @ispindles.sort_by { |obj| obj.created_at } %>
<% @test.each do |ip| %>
<% ip.name %>
<% @collect_temp << ip.temperature %>
<% @collect_dens << ip.density.to_f %>
<% @collect_date_temp << ip.created_at.strftime("%Y-%m-%d" "%H-%M-%s") %>
<% @collect_date << ip.created_at.strftime("%Y-%m-%d") %>
<% end %>
<%# raise %>
<% @brew = Brew.find(params[:brew_id]) %>
<% @beer_id = @brew.beer_id %>
<% @beer = Beer.find(@beer_id) %>
<% @beer_fermentation_temp_target = @beer.fermentation_temperature_target.to_f / 100 %>
<% @beer_final_dens = @beer.final_density_target %>
<% @beer_initial_dens = @beer.initial_density_target %>
<%# @collect_date.sort %>
<%# raise %>

<div class="row">
  <div class="col-md-6">
    <section class="profil-panel profils-widget">
      <h5>Data from DB : Temperature</h5> <br>
      <canvas id="myChartTemp" style="background-color: #fff;"></canvas>
      <script>

        var array_h_temp = [];
        var array_h_temp_target = [];
        var temp_target = <%= @beer_fermentation_temp_target %>;
        var temp = <%= raw @collect_temp  %>;
        var date = <%= raw @collect_date_temp %>;
        // date.replace(/&quot;/g, '"');

        for (let i=0; i < temp.length; i++){
          array_h_temp.push({x: date[i], y: parseFloat(temp[i])});
          array_h_temp_target.push({x: date[i], y: temp_target });
        };
        console.log(array_h_temp);
        console.log(array_h_temp_target);

        // array_h_temp.sort(function(a, b) {
        //   parseInt(a, 10).x - parseInt(b, 10).x;
        // });

        // console.log(array_h_temp);
        console.log('oki');

        const colors = {
          green: {
            fill: '#e0eadf',
            stroke: '#5eb84d',
          },
          lightBlue: {
            stroke: '#6fccdd',
            fill: '#6fccdd',
          },
          darkBlue: {
            fill: '#92bed2',
            stroke: '#3282bf',
          },
          purple: {
            fill: '#8fa8c8',
            stroke: '#75539e',
          },
        };

        var ctx = document.getElementById("myChartTemp");
        var myChart = new Chart(ctx, {
          type: 'line',
          data: {
            datasets: [
              {
                label: 'Temperature constatée',
                data: array_h_temp,
                showLine: true,
                fill: false,
                borderColor: colors.darkBlue.stroke,
                backgroundColor: colors.lightBlue.fill
              },
              {
                label: 'Temperature cible',
                data: array_h_temp_target,
                showLine: true,
                fill: false,
                borderColor: 'red'
              }
            ]
          },
          options: {
            tooltips: {
              mode: 'index',
              intersect: false,
            },
            hover: {
              mode: 'nearest',
              intersect: true
            },
            scales: {
              xAxes: [{
              type: 'time',
              time: {
                  parser: 'YYYY-MM-DD HH:mm:ss',
                  unit: 'minute',
                  displayFormats: {
                      'minute': 'YYYY-MM-DD HH:mm:ss',
                      'hour': 'YYYY-MM-DD HH:mm:ss'
                  }
              },
            }],
              yAxes: [{
                  ticks: {
                      suggestedMin: 19
                  }
              }]
            },
          }
        });
      </script>
    </section>
  </div>
  <br>
  <br>
  <div class="col-md-6">
    <section class="profil-panel profils-widget">
      <h5>Data from DB : Density</h5> <br>
      <canvas id="myChartDens" style="background-color: #fff;"></canvas>
      <script>

        var array_dens = [];
        var array_h_dens = [];
        var array_h_dens_target = [];
        var dens_cible = <%= @beer_initial_dens %>;
        var dens = <%= raw @collect_dens %>;
        var date = <%= raw @collect_date_temp %>;
        // date.replace(/&quot;/g, '"');

        for (let i=0; i < date.length; i++){
          array_h_dens.push({x: date[i], y: dens[i]});
          array_h_dens_target.push({x: date[i], y: dens_cible });
        };
        console.log(array_h_dens);
        console.log(array_h_dens_target);

        var ctx = document.getElementById("myChartDens");
        var myChart = new Chart(ctx, {
          type: 'line',
          data: {
            datasets: [
              {
                label: 'Density constatée',
                data: array_h_dens,
                showLine: true,
                fill: false,
                borderColor: '#3FBF7F'
              },
              {
                label: 'Density cible',
                data: array_h_dens_target,
                showLine: true,
                fill: false,
                borderColor: '#3F3FBF'
              }
            ]
          },
          options: {
            tooltips: {
              mode: 'index',
              intersect: false,
            },
            hover: {
              mode: 'nearest',
              intersect: true
            },
            scales: {
              xAxes: [{
                type: 'time',
                time: {
                    parser: 'YYYY-MM-DD HH:mm:ss',
                    unit: 'minute',
                    displayFormats: {
                        'minute': 'YYYY-MM-DD HH:mm:ss',
                        'hour': 'YYYY-MM-DD HH:mm:ss'
                    }
                },
              }],
              yAxes: [{
                  ticks: {
                      suggestedMin: 1013
                  }
              }]
            },
          }
        });
      </script>
    </section>
  </div>
  <br>

<!--   <div class="col-md-6">
    <section class="profil-panel profils-widget">
      <h5>Focus : Temperature</h5> <br>
      <%#= area_chart Ispindle.group_by_minute(:created_at).maximum(:temperature), min: 10, max: 40, colors: ["#b00", "#666"] %>
    </section>
  </div>

  <div class="col-md-6">
    <section class="profil-panel profils-widget">
      <h5>Focus : Density</h5> <br>
      <%#= line_chart Ispindle.group_by_day(:created_at).maximum(:density), min: 1000, max: 1100, colors: ["#3FBF7F", "#3FBF8F"], dataset: {borderWidth: 20} %>
    </section>
  </div>
</div> -->



<br>
</div>


<div style="background-color: #F0ECEB">
  <br>
  <br>
  <br>
  <br>
  <br>
  <br>
  <br>
  <br>
</div>
